FROM rocker/r-ver:4.4

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libxml2-dev \
    libcurl4-openssl-dev \
    libssl-dev \
    libfontconfig1-dev \
    libharfbuzz-dev \
    libfribidi-dev \
    libfreetype6-dev \
    libpng-dev \
    libtiff5-dev \
    libjpeg-dev \
    python3 \
    python3-pip \
    python3-dev \
    libhdf5-dev \
    libgit2-dev \
    zlib1g-dev \
    libgfortran5 \
    liblapack-dev \
    libopenblas-dev \
    && rm -rf /var/lib/apt/lists/*

# Set Python environment variables
ENV RETICULATE_PYTHON="/usr/bin/python3"

# Install R packages
RUN R -e 'options(repos = c(CRAN = "https://cloud.r-project.org")); \
    install.packages(c( \
        "BiocManager", \
        "remotes", \
        "devtools", \
        "ggplot2", \
        "Matrix", \
        "reticulate", \
        "Rcpp", \
        "RcppArmadillo", \
        "leiden", \
        "uwot", \
        "Seurat", \
        "Signac", \
        "Matrix" \
    ))'

# Install Bioconductor packages
RUN R -e 'BiocManager::install(c( \
        "EnsDb.Hsapiens.v86", \
        "GenomeInfoDb", \
        "biovizBase", \
        "GenomicRanges", \
        "IRanges", \
        "Rsamtools", \
        "S4Vectors", \
        "multtest", \
        "SeuratObject" \
    ), ask=FALSE)'
# Install R packages
RUN R -e 'options(repos = c(CRAN = "https://cloud.r-project.org")); \
    install.packages("Signac")'
# Install python3-full
RUN apt-get update && apt-get install -y python3-full

# Create and activate virtual environment
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Now install packages in the virtual environment
RUN pip install leidenalg
RUN pip install numpy
RUN pip install pandas
RUN pip install scipy 
RUN pip install statsmodels


# Create directories
RUN mkdir -p /input /output /scripts && \
    chmod 777 /input /output /scripts

COPY scripts/* /scripts/

RUN chmod +x /scripts/*.sh && \
    chmod +x /scripts/*.py && \
    sed -i 's/\r$//' /scripts/*.sh 

# Set up volume mount points
VOLUME ["/input", "/output"]
#WORKDIR /output

# Default command
ENTRYPOINT ["/scripts/pipeline_entrypoint.sh"]
CMD ["version"]